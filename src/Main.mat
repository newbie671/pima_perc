#! /usr/bin/octave -qf
source('./SelectFeatures.mat');
source('./Perceptron.oct');

A = csvread("../data/pima-indians-diabetes.data");
n = columns(A);

#ones = A((A(:,n)==1),:);
zeroes = A((A(:,n)==0),:);

#for i = 1:n-1
#    figure;
#    plot(ones(:,i), ones(:,i+1), "rx");
#    hold on;
#    plot(zeroes(:,i), zeroes(:,i+1), "go");
#endfor

x = A(:,1:8);
y = A(:,9:9);

x(x(:,1) > 8) = 8;
max(x(:,8))
x(x(:,8) <=30) = 1;
x(x(:,8) > 30 & x(:,8) <= 40) = 2;
x(x(:,8) > 40 & x(:,8) <= 50) = 3;
x(x(:,8) > 50 & x(:,8) <= 60) = 4;
x(x(:,8) > 60 & x(:,8) <= 70) = 5;
x(x(:,8) > 70) = 6;
x -= repmat(mean(x), rows(x), 1);
x ./= repmat(var(x), rows(x), 1);


[_,_,_,weights] = pcn_init(x,y);
weights = pcntrain(x,y,weights,0.25,100);
[m, a] = confmat(x, y, weights);

Accs = [];
for i = 1:10
    xTrain = x(1:2:end,:);
    xTest = x(2:2:end,:);
    yTrain = y(1:2:end,:);
    yTest = y(2:2:end,:);

    [_,_,_,weights] = pcn_init(xTrain, yTrain);
    weights = pcntrain(xTrain, yTrain, weights, 0.25, 100);
    [m, a] = confmat(xTest, yTest, weights);
    Accs = [Accs, a];
endfor

function acc = eval(Input, Output)
    [_,_,_,weights] = pcn_init(Input,Output);
    weights = pcntrain(Input,Output,weights,0.25,100);
    [_, acc] = confmat(Input, Output, weights);
endfunction

mean(Accs)

for j = 1:50
    Accs = [];
    addpath(".");
    SelectedFeatures = SelectFeaturesUp(x, y, "eval")
    xTrain = x(1:2:end, SelectedFeatures);
    xTest  = x(2:2:end, SelectedFeatures);
    yTrain = y(1:2:end, :);
    yTest  = y(2:2:end, :);
    for i = 1:10
        [_,_,_,weights] = pcn_init(xTrain, yTrain);
        weights = pcntrain(xTrain, yTrain, weights, 0.25, 100);
        [m, a] = confmat(xTest, yTest, weights);
        Accs = [Accs, a];
    endfor

    mean(Accs)
endfor

ands = [0,0,0;0,1,0;1,0,0;1,1,1];
x = ands(:,1:2);
y = ands(:,3:3);
[_,_,_,weights] = pcn_init(x,y);
weights = pcntrain(x,y,weights,0.15,100);
confmat(x, y, weights);

ors = [0,0,0;0,1,1;1,0,1;1,1,1];
x = ors(:,1:2);
y = ors(:,3:3);
[_,_,_,weights] = pcn_init(x,y);
weights = pcntrain(x,y,weights,0.15,100);
confmat(x, y, weights);

pause();
